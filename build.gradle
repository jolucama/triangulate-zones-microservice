buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.3.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
pmd {
   ignoreFailures = true
   pmdTest.enabled=false
 }
findbugs {
    ignoreFailures=true
    findbugsTest.enabled=false
}
findbugsMain.reports.html.enabled = true
findbugsMain.reports.xml.enabled = false
jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.enabled = true
        html.destination = "${buildDir}/jacocoHtml"
    }
}
//apply plugin: 'checkstyle'
//checkstyle.configFile = file('config/checkstyle/checkstyle.xml')

apply plugin: 'org.springframework.boot'

jar {
    baseName = 'zones-rest-service'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
    jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    dev
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile 'org.slf4j:slf4j-api:1.7.13'
    
    //Mongo DB
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"

    //Template Engine
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    
    //Spring Security
    //compile "org.springframework.boot:spring-boot-starter-security"
    
    //Swagger
    compile "io.springfox:springfox-data-rest:2.6.1"
    compile "io.springfox:springfox-swagger2:2.6.1"
    compile "io.springfox:springfox-swagger-ui:2.6.1"
    
    dev("org.springframework.boot:spring-boot-devtools")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}
